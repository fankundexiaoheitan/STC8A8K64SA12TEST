C51 COMPILER V9.54   OLED                                                                  10/30/2021 11:25:35 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: C:\xuexigongju\keil\C51\BIN\C51.EXE oled.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\List
                    -ings\oled.lst) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "STC8.h"
   2          #include "oled.h"
   3          #include "codetab.h"
   4          #include "my_IIC.h"
   5          
   6          #define Brightness      0xCF 
   7          #define X_WIDTH         128
   8          #define Y_WIDTH         64
   9          /*********************OLED驱动程序用的延时程序************************************/
  10          void delay(unsigned short int z)
  11          {
  12   1              unsigned short int x,y;
  13   1              for(x=z;x>0;x--)
  14   1                      for(y=110;y>0;y--);
  15   1      }
  16          
  17          void OLED_WrDat(unsigned char IIC_Data)
  18          {
  19   1              IIC_Start();
  20   1              IIC_SendByte(0x78);
  21   1              IIC_SendByte(0x40);                     //write data
  22   1              IIC_SendByte(IIC_Data);
  23   1              IIC_Stop();
  24   1      }
  25          /*********************OLED写命令************************************/
  26          void OLED_WrCmd(unsigned char IIC_Command)
  27          {
  28   1              IIC_Start();
  29   1              IIC_SendByte(0x78);            //Slave address,SA0=0
  30   1              IIC_SendByte(0x00);                     //write command
  31   1              IIC_SendByte(IIC_Command);
  32   1              IIC_Stop();
  33   1      }
  34          /*********************OLED 设置坐标************************************/
  35          void OLED_Set_Pos(unsigned char x, unsigned char y) 
  36          { 
  37   1              OLED_WrCmd(0xb0+y);
  38   1              OLED_WrCmd(((x&0xf0)>>4)|0x10);
  39   1              OLED_WrCmd(x&0x0f); 
  40   1      } 
  41          /*********************OLED全屏************************************/
  42          void OLED_Fill(unsigned char bmp_dat) 
  43          {
  44   1              unsigned char y,x;
  45   1              for(y=0;y<8;y++)
  46   1              {
  47   2                      OLED_WrCmd(0xb0+y);
  48   2                      OLED_WrCmd(0x00);
  49   2                      OLED_WrCmd(0x10);
  50   2                      for(x=0;x<X_WIDTH;x++)
  51   2                      OLED_WrDat(bmp_dat);
  52   2              }
  53   1      }
  54          /*********************OLED复位************************************/
C51 COMPILER V9.54   OLED                                                                  10/30/2021 11:25:35 PAGE 2   

  55          void OLED_CLS(void)
  56          {
  57   1              unsigned char y,x;
  58   1              for(y=0;y<8;y++)
  59   1              {
  60   2                      OLED_WrCmd(0xb0+y);
  61   2                      OLED_WrCmd(0x00);
  62   2                      OLED_WrCmd(0x10);
  63   2                      for(x=0;x<X_WIDTH;x++)
  64   2                      OLED_WrDat(0);
  65   2              }
  66   1      }
  67          /*********************OLED初始化************************************/
  68          void OLED_Init(void)
  69          {
  70   1              delay(500);//初始化之前的延时很重要！
  71   1              OLED_WrCmd(0xae);//--turn off oled panel
  72   1              OLED_WrCmd(0x00);//---set low column address
  73   1              OLED_WrCmd(0x10);//---set high column address
  74   1              OLED_WrCmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
  75   1              OLED_WrCmd(0x81);//--set contrast control register
  76   1              OLED_WrCmd(Brightness); // Set SEG Output Current Brightness
  77   1              OLED_WrCmd(0xa1);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
  78   1              OLED_WrCmd(0xc8);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
  79   1              OLED_WrCmd(0xa6);//--set normal display
  80   1              OLED_WrCmd(0xa8);//--set multiplex ratio(1 to 64)
  81   1              OLED_WrCmd(0x3f);//--1/64 duty
  82   1              OLED_WrCmd(0xd3);//-set display offset  Shift Mapping RAM Counter (0x00~0x3F)
  83   1              OLED_WrCmd(0x00);//-not offset
  84   1              OLED_WrCmd(0xd5);//--set display clock divide ratio/oscillator frequency
  85   1              OLED_WrCmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
  86   1              OLED_WrCmd(0xd9);//--set pre-charge period
  87   1              OLED_WrCmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
  88   1              OLED_WrCmd(0xda);//--set com pins hardware configuration
  89   1              OLED_WrCmd(0x12);
  90   1              OLED_WrCmd(0xdb);//--set vcomh
  91   1              OLED_WrCmd(0x40);//Set VCOM Deselect Level
  92   1              OLED_WrCmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
  93   1              OLED_WrCmd(0x02);//
  94   1              OLED_WrCmd(0x8d);//--set Charge Pump enable/disable
  95   1              OLED_WrCmd(0x14);//--set(0x10) disable
  96   1              OLED_WrCmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
  97   1              OLED_WrCmd(0xa6);// Disable Inverse Display On (0xa6/a7) 
  98   1              OLED_WrCmd(0xaf);//--turn on oled panel
  99   1              OLED_Fill(0x00); //初始清屏
 100   1              OLED_Set_Pos(0,0);
 101   1      } 
 102          /*******************功能描述：显示8*16一组标准ASCII字符串        显示的坐标（x,y），y为页范围0～7***************
             -*/
 103          void OLED_P8x16Str(unsigned char x, unsigned char y,unsigned char ch[])
 104          {
 105   1              unsigned char c=0,i=0,j=0;
 106   1              while (ch[j]!='\0')
 107   1              {
 108   2                      c =ch[j]-32;
 109   2                      if(x>120)
 110   2                      {
 111   3                              x=0;
 112   3                              y++;
 113   3                      }
 114   2                      
 115   2                      OLED_Set_Pos(x,y);
C51 COMPILER V9.54   OLED                                                                  10/30/2021 11:25:35 PAGE 3   

 116   2                      for(i=0;i<8;i++)
 117   2                              OLED_WrDat(F8X16[c*16+i]);
 118   2                      
 119   2                      OLED_Set_Pos(x,y+1);
 120   2                      for(i=0;i<8;i++)
 121   2                              OLED_WrDat(F8X16[c*16+i+8]);
 122   2                      x+=8;
 123   2                      j++;
 124   2              }
 125   1      }
 126          void OLED_P8x16Ch(unsigned char x, unsigned char y,unsigned char ch)
 127          {
 128   1              unsigned char c=0,i=0;
 129   1              c =ch-32;
 130   1              if(x>120){x=0;y++;}
 131   1              OLED_Set_Pos(x,y);
 132   1              for(i=0;i<8;i++)
 133   1              OLED_WrDat(F8X16[c*16+i]);
 134   1              OLED_Set_Pos(x,y+1);
 135   1              for(i=0;i<8;i++)
 136   1              OLED_WrDat(F8X16[c*16+i+8]);
 137   1              x+=8;
 138   1      }
 139          unsigned int oled_pow(unsigned char m,unsigned char n)
 140          {
 141   1              unsigned int result=1;   
 142   1              while(n--)result*=m;    
 143   1              return result;
 144   1      }       
 145          
 146          
 147          //显示2个数字
 148          //x,y :起点坐标  
 149          //len :数字的位数
 150          //size:字体大小
 151          //mode:模式     0,填充模式;1,叠加模式
 152          //num:数值(0~4294967295);                         
 153          void OLED_ShowNum(unsigned char x,unsigned char y,int num,unsigned char len)
 154          {               
 155   1              unsigned char t,temp;
 156   1              unsigned char enshow=0;         
 157   1              if(num < 0)
 158   1              {
 159   2                      num = 0-num;
 160   2                      OLED_P8x16Ch(x,y,'-');
 161   2              }
 162   1              else
 163   1              {
 164   2                      OLED_P8x16Ch(x,y,' ');
 165   2              }
 166   1                                                 
 167   1              for(t=0;t<len;t++)
 168   1              {
 169   2                      temp=(num/oled_pow(10,len-t-1))%10;
 170   2                      if(enshow==0&&t<(len-1))
 171   2                      {
 172   3                              if(temp==0)
 173   3                              {
 174   4                                      OLED_P8x16Ch(x+8*t+8,y,' ');
 175   4                                      continue;
 176   4                              }else enshow=1; 
 177   3                               
C51 COMPILER V9.54   OLED                                                                  10/30/2021 11:25:35 PAGE 4   

 178   3                      }
 179   2                      OLED_P8x16Ch(x+8*t+8,y,temp+'0'); 
 180   2              }
 181   1      }
 182          //显示图片
 183          void OLED_BMP(unsigned char x, unsigned char y,unsigned char *ch)
 184          {
 185   1              unsigned char i=0,j=0;
 186   1              for(j=0;j<8;j++)
 187   1              {
 188   2                      OLED_Set_Pos(x,y+j);
 189   2                      for(i=0;i<64;i++)
 190   2                              OLED_WrDat(ch[i+64*j]);
 191   2              }
 192   1      }
 193          
 194          //显示汉字
 195          void OLED_WENZI(unsigned char x, unsigned char y,unsigned char *ch)
 196          {
 197   1              unsigned char i=0,j=0;
 198   1              for(j=0;j<2;j++)
 199   1              {
 200   2                      OLED_Set_Pos(x,y+j);
 201   2                      for(i=0;i<16;i++)
 202   2                              OLED_WrDat(ch[i+16*j]);
 203   2              }
 204   1      }
 205          
 206          //显示时间
 207          void OLED_TIME(unsigned char x, unsigned char y,unsigned char ch[])
 208          {
 209   1              unsigned char c=0,i=0,j=0,k = 0,flag = 0;
 210   1              unsigned char x_source = x,y_source = y;
 211   1              while (ch[k]!='\0')
 212   1              {
 213   2                      c =ch[k]-32;
 214   2                      if(c == 0)      //空格
 215   2                      {
 216   3                              flag = 1;
 217   3                              x = x_source;
 218   3                      }
 219   2                      else            //其他字符则打印
 220   2                      {
 221   3                              if(flag == 0)   //输出日期
 222   3                              {
 223   4                                      for(j=0;j<2;j++)
 224   4                                      {
 225   5                                              OLED_Set_Pos(x,y+j);
 226   5                                              for(i=0;i<8;i++)
 227   5                                                      OLED_WrDat(F8X16[i+8*j+16*c]);
 228   5                                      }
 229   4                                      x += 8;
 230   4                              }
 231   3                              else    //输出时间
 232   3                              {
 233   4                                      for(j=0;j<4;j++)
 234   4                                      {
 235   5                                              OLED_Set_Pos(x,2+y+j);
 236   5                                              for(i=0;i<16;i++)
 237   5                                                      OLED_WrDat(time_code[i+16*j+64*c]);
 238   5                                      }
 239   4                                      x += 16;
C51 COMPILER V9.54   OLED                                                                  10/30/2021 11:25:35 PAGE 5   

 240   4                              }
 241   3                      }
 242   2                      k++;
 243   2              }
 244   1      }
 245          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1175    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      55
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
